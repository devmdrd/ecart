<section class="py-6 bg-white mt-1">
  <div class="container mx-auto">
    <div class="flex flex-col md:flex-row">
      <div class="w-full md:w-1/4 p-2 mb-4 mt-7">
        <h2 class="text-xl font-semibold mb-4 border-b border-gray-300 pb-2">Search</h2>
        <form id="search-form" class="mb-6">
          <div class="relative">
            <input
              type="text"
              id="searchInput"
              placeholder="Search products..."
              value="<%= appliedFilters.searchTerm || '' %>"
              class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-gray-500"
            />
            <button type="submit" class="absolute right-3 top-2.5 text-gray-500 hover:text-black">
              <i class="fa fa-search"></i>
            </button>
          </div>
        </form>

        <h2 class="text-xl font-semibold text-gray-800 mb-4 border-b border-gray-300 pb-2">Price Range</h2>
        <form id="filter-form" class="mb-6">
          <input type="hidden" name="categoryId" id="currentCategoryId" value="<%= appliedFilters.categoryId || 'all' %>">
          <input type="hidden" name="searchTerm" id="currentSearchTerm" value="<%= appliedFilters.searchTerm || '' %>">
          <input type="hidden" name="brandId" id="currentBrandId" value="<%= appliedFilters.brandId || '' %>">
          <input type="hidden" name="sortBy" id="currentSortBy" value="<%= appliedFilters.sortBy || '' %>">
          <input type="hidden" name="minPrice" id="minPrice" value="<%= appliedFilters.minPrice || 0 %>">
          <input type="hidden" name="maxPrice" id="maxPrice" value="<%= appliedFilters.maxPrice || 150000 %>">

          <div class="relative mt-6">
            <input
              type="range"
              min="0"
              max="150000"
              step="1000"
              value="<%= appliedFilters.maxPrice || 150000 %>"
              id="price-slider"
              class="w-full h-2 bg-gray-300 rounded-lg cursor-pointer"
            />
            <p class="mb-2 text-sm flex justify-between text-gray-700">
              <span class="font-medium">₹0</span>
              <span class="font-medium">₹<span id="price-display"><%= appliedFilters.maxPrice || 150000 %></span></span>
            </p>
          </div>
        </form>

        <h2 class="text-xl font-semibold text-gray-800 mb-4 border-b border-gray-300 pb-2">Categories</h2>
        <ul class="space-y-3 text-sm mb-6" id="category-list">
          <% categoriesData.forEach((category) => { %>
            <li>
              <a href="#" 
                 class="category-link flex items-center justify-between py-3 px-3 rounded-md text-gray-700 hover:bg-gray-200 transition-colors duration-200 ease-in-out <%= appliedFilters.categoryId === category._id.toString() ? 'bg-black text-white' : '' %>" 
                 data-category-id="<%= category._id %>">
                <span><%= category.name %></span>
                <i class="fas fa-chevron-right text-xs text-gray-400"></i>
              </a>
            </li>
          <% }) %>
        </ul>        

        <h2 class="text-xl font-semibold text-gray-800 mb-4 border-b border-gray-300 pb-2">Brands</h2>
        <div class="flex flex-wrap gap-2">
          <% brandsData.forEach((brand) => { %>
          <a href="#" class="brand-link px-4 py-2 text-sm rounded-md bg-gray-100 text-gray-700 hover:bg-gray-200 transition-colors duration-200 ease-in-out <%= appliedFilters.brandId === brand._id.toString() ? 'bg-black text-white' : '' %>" data-brand-id="<%= brand._id %>">
            <%= brand.name %>
          </a>
          <% }) %>
        </div>
      </div>

      <div class="w-full md:w-3/4 p-5 bg-white">
        <div class="flex flex-wrap justify-between items-center mb-6 pb-3 border-b border-gray-300">
          <div class="flex items-center gap-2 mb-3 md:mb-0">
            <div class="flex gap-2">
              <button class="w-8 h-8 border border-gray-300 rounded-md flex items-center justify-center hover:bg-gray-100">
                <i class="fa fa-th"></i>
              </button>
              <button class="w-8 h-8 border border-gray-300 rounded-md flex items-center justify-center bg-black text-white hover:bg-gray-800">
                <i class="fa fa-th-large"></i>
              </button>
              <button class="w-8 h-8 border border-gray-300 rounded-md flex items-center justify-center hover:bg-gray-100">
                <i class="fa fa-list"></i>
              </button>
            </div>
          </div>
          <div class="flex items-center">
            <select name="sortBy" class="px-4 py-2 border border-gray-300 rounded-md text-sm focus:ring-2 focus:ring-gray-500 focus:border-gray-500" id="sort-select">
              <option value="" <%= !appliedFilters.sortBy ? 'selected' : '' %>>Default sorting</option>
              <option value="low" <%= appliedFilters.sortBy === 'low' ? 'selected' : '' %>>Price: low to high</option>
              <option value="high" <%= appliedFilters.sortBy === 'high' ? 'selected' : '' %>>Price: high to low</option>
            </select>
          </div>
        </div>

        <div class="mb-4 text-sm text-gray-600">
          <p>Showing <%= products.length %> products</p>
        </div>
        
        <% if (products.length === 0) { %>
          <div class="text-center py-10 bg-gray-100 rounded-md">
            <i class="text-gray-400 text-4xl mb-3"></i>
            <p class="text-lg text-gray-700 font-medium">No products found</p>
            <p class="text-gray-500 text-sm mb-4">Try adjusting your filters</p>
            <a href="/products" class="bg-black hover:bg-gray-800 text-white py-2 px-6 rounded-md text-sm">View All Products</a>
          </div>
        <% } else { %>
          <div class="flex flex-wrap">
            <% products.forEach((product) => { %>
              <div class="w-full sm:w-1/2 lg:w-1/3">
                <%- include('../../layouts/partials/product-card', { product: product }) %>
              </div>
            <% }) %>
          </div>
        <% } %>        
        
        <% if (totalPages > 1) { %>
        <div class="flex justify-center mt-8">
          <div class="inline-flex rounded-md shadow-sm">
            <% if (currentPage > 1) { %>
            <a href="?<%= new URLSearchParams({...appliedFilters, page: currentPage - 1}).toString() %>" 
               class="px-4 py-2 text-sm border border-gray-300 rounded-l-md hover:bg-gray-100 text-gray-700">
              <i class="fa fa-chevron-left"></i>
            </a>
            <% } else { %>
            <span class="px-4 py-2 text-sm border border-gray-300 rounded-l-md opacity-50 cursor-not-allowed bg-gray-100 text-gray-400">
              <i class="fa fa-chevron-left"></i>
            </span>
            <% } %>

            <% let startPage = 1; let endPage = totalPages; %>
            <% if (totalPages > 5) { %>
              <% if (currentPage <= 3) { endPage = 5; } else if (currentPage >= totalPages - 2) { startPage = totalPages - 4; } else { startPage = currentPage - 2; endPage = currentPage + 2; } %>
            <% } %>

            <% for (let i = startPage; i <= endPage; i++) { const params = new URLSearchParams({...appliedFilters}); if (i > 1) params.set('page', i); else params.delete('page'); %>
            <a href="?<%= params.toString() %>" 
               class="px-4 py-2 text-sm border-t border-b border-r border-gray-300 <%= currentPage === i ? 'bg-black text-white' : 'hover:bg-gray-100 text-gray-700' %>">
              <%= i %>
            </a>
            <% } %>

            <% if (currentPage < totalPages) { %>
            <a href="?<%= new URLSearchParams({...appliedFilters, page: currentPage + 1}).toString() %>" 
               class="px-4 py-2 text-sm border-t border-b border-r border-gray-300 rounded-r-md hover:bg-gray-100 text-gray-700">
              <i class="fa fa-chevron-right"></i>
            </a>
            <% } else { %>
            <span class="px-4 py-2 text-sm border-t border-b border-r border-gray-300 rounded-r-md opacity-50 cursor-not-allowed bg-gray-100 text-gray-400">
              <i class="fa fa-chevron-right"></i>
            </span>
            <% } %>
          </div>
        </div>
        <% } %>
      </div>
    </div>
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const filterForm = document.getElementById('filter-form');
    const searchForm = document.getElementById('search-form');
    const searchInput = document.getElementById('searchInput');
    const priceSlider = document.getElementById('price-slider');
    const priceDisplay = document.getElementById('price-display');
    const categoryLinks = document.querySelectorAll('.category-link');
    const brandLinks = document.querySelectorAll('.brand-link');
    const sortSelect = document.getElementById('sort-select');

    function debounce(func, wait) {
      let timeout;
      return function() {
        const context = this, args = arguments;
        clearTimeout(timeout);
        timeout = setTimeout(() => {
          func.apply(context, args);
        }, wait);
      };
    }

    priceDisplay.textContent = priceSlider.value;

    priceSlider.addEventListener('change', function() {
      priceDisplay.textContent = priceSlider.value;
      document.getElementById('maxPrice').value = priceSlider.value;
      applyFilters();
    });

    priceSlider.addEventListener('input', debounce(function() {
      priceDisplay.textContent = priceSlider.value;
      document.getElementById('maxPrice').value = priceSlider.value;
      applyFilters();
    }, 300));

    categoryLinks.forEach(link => {
      link.addEventListener('click', function(event) {
        event.preventDefault();
        const categoryId = link.getAttribute('data-category-id');
        document.getElementById('currentCategoryId').value = categoryId;
        applyFilters();
      });
    });

    brandLinks.forEach(link => {
      link.addEventListener('click', function(event) {
        event.preventDefault();
        const brandId = link.getAttribute('data-brand-id');
        document.getElementById('currentBrandId').value = brandId;
        applyFilters();
      });
    });

    sortSelect.addEventListener('change', function() {
      document.getElementById('currentSortBy').value = sortSelect.value;
      applyFilters();
    });

    searchForm.addEventListener('submit', function(event) {
      event.preventDefault();
      const searchTerm = searchInput.value.trim();
      document.getElementById('currentSearchTerm').value = searchTerm;
      applyFilters();
    });

    searchInput.addEventListener('input', debounce(function() {
      const searchTerm = searchInput.value.trim();
      document.getElementById('currentSearchTerm').value = searchTerm;
      applyFilters();
    }, 300));

    function applyFilters() {
      const formData = new FormData(filterForm);
      const params = new URLSearchParams();

      formData.forEach((value, key) => {
        if (value) params.append(key, value);
      });

      window.location.search = params.toString();
    }

    function initializeFilters() {
      const urlParams = new URLSearchParams(window.location.search);

      categoryLinks.forEach(link => {
        const categoryId = link.getAttribute('data-category-id');
        if (urlParams.get('categoryId') === categoryId) {
          link.classList.add('bg-black', 'text-white');
        } else {
          link.classList.remove('bg-black', 'text-white');
        }
      });

      brandLinks.forEach(link => {
        const brandId = link.getAttribute('data-brand-id');
        if (urlParams.get('brandId') === brandId) {
          link.classList.add('bg-black', 'text-white');
        } else {
          link.classList.remove('bg-black', 'text-white');
        }
      });

      const sortBy = urlParams.get('sortBy');
      if (sortBy) {
        sortSelect.value = sortBy;
      }
    }

    initializeFilters();
  });
</script>
