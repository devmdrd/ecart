<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4">
  <div class="flex flex-col md:flex-row gap-8">
    <%- include('../../layouts/partials/accounts-sidebar') %>
    <div class="bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden w-full">
      <div class="px-6 py-4 border-b border-gray-200">
        <h3 class="text-lg font-medium text-gray-900">Order History</h3>
      </div>
      <div class="overflow-x-auto">
        <table class="min-w-full divide-y divide-gray-200">
          <thead class="bg-gray-50">
            <tr>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Order ID</th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Date</th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Total</th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
            </tr>
          </thead>
          <tbody class="bg-white divide-y divide-gray-200" id="ordersTableBody">
            <% if (orders.length === 0) { %>
              <tr>
                <td colspan="5" class="px-6 py-4 text-center text-gray-500">No orders found.</td>
              </tr>
            <% } else { %>
              <% orders.forEach(order => { %>
                <tr>
                  <td class="px-6 py-4 text-sm text-gray-900">#<%= order.id %></td>
                  <td class="px-6 py-4 text-sm text-gray-500"><%= order.date %></td>
                  <td class="px-6 py-4 text-sm">
                    <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full 
                      <%= order.status === 'Delivered' ? 'bg-gray-200 text-gray-800' : 
                          order.status === 'Shipped' ? 'bg-gray-100 text-gray-800' : 
                          order.status === 'Pending' ? 'bg-gray-100 text-gray-800' : 
                          'bg-gray-100 text-gray-800' %>">
                      <%= order.status %>
                    </span>
                  </td>
                  <td class="px-6 py-4 text-sm text-gray-900">â‚¹<%= order.total.toFixed(2) %></td>
                  <td class="px-6 py-4">
                    <div class="flex space-x-2">
                      <span class="text-sm text-gray-600 hover:underline cursor-pointer" onclick='showOrderDetails(<%- JSON.stringify(order) %>)'>View</span>
                    </div>
                  </td>
                </tr>
              <% }); %>
            <% } %>
          </tbody>
        </table>
      </div>
    </div>
  </div>

  <div id="orderModal" class="fixed inset-0 z-50 flex items-center justify-center bg-gray-900 bg-opacity-50 hidden transition-opacity duration-300 opacity-0">
    <div class="bg-white rounded-xl shadow-2xl w-full max-w-5xl p-6 mx-4 relative transform transition-all duration-300 scale-95">
      <div class="flex justify-between items-center pb-4 border-b border-gray-100">
        <div>
          <h3 class="text-2xl font-semibold text-gray-900">Order Details</h3>
          <p class="text-sm text-gray-500 mt-1">Order #<span id="modalOrderId">-</span></p>
        </div>
        <button id="closeModal" class="text-gray-400 hover:text-gray-600 transition-colors duration-200">
          <i class="fas fa-times"></i>
        </button>
      </div>
  
      <div class="mt-6 grid grid-cols-1 lg:grid-cols-3 gap-8">
        <div class="lg:col-span-1 space-y-6">
          <div class="bg-gray-50 rounded-lg p-5 border border-gray-100">
            <h4 class="text-lg font-medium text-gray-900 mb-4 flex items-center">
              <i class="fas fa-file-alt mr-2 text-gray-700"></i>
              Order Summary
            </h4>
            <div class="space-y-3">
              <div class="flex justify-between">
                <span class="text-gray-600">Date Placed</span>
                <span id="modalOrderDate" class="font-medium">-</span>
              </div>
              <div class="flex justify-between">
                <span class="text-gray-600">Status</span>
                <span id="modalOrderStatus" class="px-2.5 py-0.5 inline-flex text-xs font-medium rounded-full">-</span>
              </div>
              <div class="flex justify-between">
                <span class="text-gray-600">Payment Method</span>
                <span id="modalPaymentMethod" class="flex items-center">
                  <span>-</span>
                </span>
              </div>
              <div class="flex justify-between pt-3 border-t border-gray-200 mt-3">
                <span class="text-gray-900 font-medium">Total Amount</span>
                <span id="modalOrderTotal" class="text-lg font-bold text-gray-900">-</span>
              </div>
            </div>
          </div>
  
          <div class="bg-gray-50 rounded-lg p-5 border border-gray-100">
            <h4 class="text-lg font-medium text-gray-900 mb-4 flex items-center">
              <i class="fas fa-truck mr-2 text-gray-700"></i>
              Shipping Information
            </h4>
            <div class="space-y-2 text-gray-600" id="modalShippingAddress">
              <p class="font-medium text-gray-900">Loading...</p>
            </div>
          </div>
        </div>
  
        <div class="lg:col-span-1">
          <div class="sticky top-4">
            <h4 class="text-lg font-medium text-gray-900 mb-4 flex items-center">
              <i class="fas fa-shopping-bag mr-2 text-gray-700"></i>
              Products (<span id="productCount">0</span>)
            </h4>
            <div id="productList" class="space-y-4 max-h-[500px] overflow-y-auto pr-2">
            </div>
          </div>
        </div>
  
        <div class="lg:col-span-1">
          <div class="sticky top-4">
            <h4 class="text-lg font-medium text-gray-900 mb-4 flex items-center">
              <i class="fas fa-clock mr-2 text-gray-700"></i>
              Order Tracking
            </h4>
            <div class="relative">
              <div class="border-l-2 border-gray-200 absolute h-full top-0 left-4"></div>
              <div id="orderTracking" class="space-y-8 ml-8">
              </div>
            </div>
  
            <div class="mt-8 bg-gray-100 rounded-lg p-4 border border-gray-200">
              <div class="flex items-start">
                <i class="fas fa-shipping-fast mr-2 text-gray-700 mt-1"></i>
                <div>
                  <h5 class="font-medium text-gray-800">Estimated Delivery</h5>
                  <p id="estimatedDelivery" class="text-sm text-gray-600 mt-1">Calculating...</p>
                </div>
              </div>
            </div>
  
            <div class="mt-4 bg-gray-50 rounded-lg p-4 border border-gray-200">
              <div class="flex items-start">
                <i class="fas fa-question-circle mr-2 text-gray-700 mt-1"></i>
                <div>
                  <h5 class="font-medium text-gray-800">Need Help?</h5>
                  <p class="text-sm text-gray-600 mt-1">Contact our support team if you have any questions about your order.</p>
                  <button class="mt-2 text-sm font-medium text-gray-700 hover:text-gray-900 transition-colors duration-200">
                    Contact Support
                  </button>
                </div>
              </div>
            </div>

            <div class="mt-4 bg-gray-50 rounded-lg p-4 border border-gray-200">
              <div class="flex items-start">
                <i class="fas fa-file-pdf mr-2 text-gray-700 mt-1"></i>
                <div>
                  <h5 class="font-medium text-gray-800">Order Report</h5>
                  <p class="text-sm text-gray-600 mt-1">Generate a report of this order.</p>
                  <button id="generateOrderReport" class="mt-2 text-sm font-medium text-gray-700 hover:text-gray-900 transition-colors duration-200">
                    Generate Report
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div id="reportModal" class="fixed inset-0 z-50 flex items-center justify-center bg-gray-900 bg-opacity-50 hidden transition-opacity duration-300 opacity-0">
    <div class="bg-white rounded-xl shadow-2xl w-full max-w-3xl p-6 mx-4 relative transform transition-all duration-300 scale-95">
      <div class="flex justify-between items-center pb-4 border-b border-gray-100">
        <div>
          <h3 class="text-2xl font-semibold text-gray-900">Order Report</h3>
          <p class="text-sm text-gray-500 mt-1">Order #<span id="reportOrderId">-</span></p>
        </div>
        <button id="closeReportModal" class="text-gray-400 hover:text-gray-600 transition-colors duration-200">
          <i class="fas fa-times"></i>
        </button>
      </div>
      <div class="mt-6 print:mt-0" id="reportContent">
        <div class="mb-6 border-b border-gray-200 pb-4">
          <h4 class="text-lg font-medium mb-2">Order Summary</h4>
          <div class="grid grid-cols-2 gap-4">
            <div>
              <p class="text-sm text-gray-600">Order ID: <span id="report-order-id" class="text-gray-900"></span></p>
              <p class="text-sm text-gray-600">Date: <span id="report-order-date" class="text-gray-900"></span></p>
              <p class="text-sm text-gray-600">Status: <span id="report-order-status" class="text-gray-900"></span></p>
            </div>
            <div>
              <p class="text-sm text-gray-600">Payment Method: <span id="report-payment-method" class="text-gray-900"></span></p>
              <p class="text-sm text-gray-600">Total Amount: <span id="report-order-total" class="text-gray-900 font-medium"></span></p>
            </div>
          </div>
        </div>
        <div class="mb-6 border-b border-gray-200 pb-4">
          <h4 class="text-lg font-medium mb-2">Shipping Information</h4>
          <div id="report-shipping-address" class="text-sm"></div>
        </div>
        <div class="mb-6">
          <h4 class="text-lg font-medium mb-2">Products</h4>
          <table class="min-w-full divide-y divide-gray-200 text-sm">
            <thead>
              <tr>
                <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Product</th>
                <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Qty</th>
                <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Price</th>
                <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Total</th>
              </tr>
            </thead>
            <tbody id="report-product-list" class="divide-y divide-gray-200"></tbody>
          </table>
        </div>
      </div>
      <div class="flex justify-end mt-6 space-x-4">
        <button id="printReport" class="px-4 py-2 bg-gray-800 text-white rounded hover:bg-gray-700 flex items-center">
          <i class="fas fa-print mr-2"></i> Print Report
        </button>
      </div>
    </div>
  </div>
</div>

<script>
  function showOrderDetails(order) {
    const modal = document.getElementById('orderModal');
    modal.classList.remove('hidden');
    setTimeout(() => {
      modal.classList.remove('opacity-0');
      modal.classList.remove('scale-95');
    }, 10);

    document.getElementById('modalOrderId').textContent = order.id;
    document.getElementById('modalOrderDate').textContent = new Date(order.date).toLocaleDateString('en-US', {
      year: 'numeric',
      month: 'long',
      day: 'numeric'
    });
    
    const statusElement = document.getElementById('modalOrderStatus');
    statusElement.textContent = order.status;
    statusElement.className = `px-2.5 py-0.5 inline-flex text-xs font-medium rounded-full bg-gray-100 text-gray-800`;
    
    const paymentMethod = order.paymentMethod || 'N/A';
    const paymentElement = document.getElementById('modalPaymentMethod');
    paymentElement.innerHTML = '';
    
    let paymentIcon = '';
    if (paymentMethod.toLowerCase().includes('COD')) {
      paymentIcon = `<i class="fas fa-money-bill-wave mr-1"></i>`;
    } else if (paymentMethod.toLowerCase().includes('ONLINE')) {
      paymentIcon = `<i class="fas fa-question-circle mr-1"></i>`;
    }
    
    paymentElement.innerHTML = `${paymentIcon}<span>${paymentMethod}</span>`;
    
    document.getElementById('modalOrderTotal').textContent = `â‚¹${order.total.toFixed(2)}`;
    
    const address = order.shippingAddress || {};
    const addressElement = document.getElementById('modalShippingAddress');
    addressElement.innerHTML = `
      <p class="font-medium text-gray-900">${address.fullName || 'Not specified'}</p>
      <p>${address.houseNameOrNo || ''} ${address.street || ''}</p>
      <p>${address.city || ''}, ${address.state || ''} ${address.postalCode || ''}</p>
      <p>${address.country || ''}</p>
      <p class="mt-2 flex items-center">
        <i class="fas fa-phone-alt mr-1 text-gray-500"></i>
        ${address.phone || 'No phone provided'}
      </p>
      ${address.email ? `<p class="flex items-center">
        <i class="fas fa-envelope mr-1 text-gray-500"></i>
        ${address.email}
      </p>` : ''}
    `;
    
    const productList = document.getElementById('productList');
    productList.innerHTML = '';
    let subtotal = 0;
    
    order.products.forEach(product => {
      subtotal += product.price * product.quantity;
      const div = document.createElement('div');
      div.className = 'flex space-x-4 p-3 hover:bg-gray-50 rounded-lg transition-colors duration-200';
      div.innerHTML = ` 
        <img src="${'/' + product.image || 'https://via.placeholder.com/80'}" alt="${product.name}" 
             class="h-20 w-20 rounded-lg object-cover border border-gray-200" />
        <div class="flex-1 min-w-0">
          <p class="font-medium text-gray-900 truncate">${product.name}</p>
          ${product.variant ? `<p class="text-sm text-gray-500 mt-1">${product.variant}</p>` : ''}
          <div class="flex justify-between items-center mt-2">
            <p class="text-sm text-gray-600">Qty: ${product.quantity}</p>
            <p class="text-sm font-medium text-gray-900">â‚¹${(product.price * product.quantity).toFixed(2)}</p>
          </div>
          ${product.status === 'returned' ? `
            <div class="mt-2">
              <span class="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-gray-100 text-gray-800">
                Returned
              </span>
            </div>
          ` : ''}
        </div>
      `;
      productList.appendChild(div);
    });
    
    document.getElementById('productCount').textContent = order.products.length;
    
    const tracking = order.tracking || {};
    const trackingSteps = [
      { 
        label: "Order Placed", 
        time: tracking.placed ? new Date(tracking.placed).toLocaleString() : null,
        icon: `<i class="fas fa-clipboard-check"></i>`,
        completed: !!tracking.placed
      },
      { 
        label: "Processed", 
        time: tracking.processed ? new Date(tracking.processed).toLocaleString() : null,
        icon: `<i class="fas fa-cog"></i>`,
        completed: !!tracking.processed
      },
      { 
        label: "Shipped", 
        time: tracking.shipped ? new Date(tracking.shipped).toLocaleString() : null,
        icon: `<i class="fas fa-truck"></i>`,
        completed: !!tracking.shipped
      },
      { 
        label: "Delivered", 
        time: tracking.delivered ? new Date(tracking.delivered).toLocaleString() : null,
        icon: `<i class="fas fa-box-open"></i>`,
        completed: !!tracking.delivered
      },
      {
        label: "Cancelled",
        time: tracking.cancelled ? new Date(tracking.cancelled).toLocaleString() : null,
        icon: `<i class="fas fa-times-circle"></i>`, 
        completed: !!tracking.cancelled
      }
    ];
    
    const orderTracking = document.getElementById('orderTracking');
    orderTracking.innerHTML = '';
    
    trackingSteps.forEach((step, index) => {
      if (step.time || index === 0) {
        const div = document.createElement('div');
        div.className = 'relative';
        
        const circleColor = step.completed ? 'bg-gray-700' : 'bg-gray-300';
        const iconColor = step.completed ? 'text-white' : 'text-gray-400';
        
        div.innerHTML = ` 
          <div class="absolute -left-8 top-1 flex items-center justify-center w-6 h-6 ${circleColor} rounded-full z-10">
            ${step.completed ? 
              `<i class="fas fa-check ${iconColor} text-xs"></i>` : 
              step.icon.replace('fas', `fas ${iconColor}`)}
          </div>
          <div class="pl-4">
            <h5 class="text-sm font-medium ${step.completed ? 'text-gray-900' : 'text-gray-500'}">${step.label}</h5>
            ${step.time ? `<p class="text-xs ${step.completed ? 'text-gray-500' : 'text-gray-400'} mt-1">${step.time}</p>` : ''}
            ${!step.time && !step.completed ? `<p class="text-xs text-gray-400 mt-1">Pending</p>` : ''}
          </div>
        `;
        orderTracking.appendChild(div);
      }
    });
    
    const estimatedDeliveryElement = document.getElementById('estimatedDelivery');
    if (order.status === 'Delivered' && tracking.delivered) {
      estimatedDeliveryElement.textContent = `Delivered on ${new Date(tracking.delivered).toLocaleDateString()}`;
    } else {
      const estDate = new Date();
      if (order.status === 'Shipped') {
        estDate.setDate(estDate.getDate() + 3);
      } else if (order.status === 'Processing') {
        estDate.setDate(estDate.getDate() + 7);
      } else {
        estDate.setDate(estDate.getDate() + 5);
      }
      estimatedDeliveryElement.textContent = estDate.toLocaleDateString('en-US', {
        weekday: 'long',
        month: 'short',
        day: 'numeric'
      });
    }
    
    document.getElementById('generateOrderReport').onclick = function() {
      generateReport(order);
    };
  }

  function generateReport(order) {
    const modal = document.getElementById('reportModal');
    modal.classList.remove('hidden');
    setTimeout(() => {
      modal.classList.remove('opacity-0');
      modal.classList.remove('scale-95');
    }, 10);

    document.getElementById('reportOrderId').textContent = order.id;
    document.getElementById('report-order-id').textContent = order.id;
    document.getElementById('report-order-date').textContent = new Date(order.date).toLocaleDateString('en-US', {
      year: 'numeric',
      month: 'long',
      day: 'numeric'
    });
    document.getElementById('report-order-status').textContent = order.status;
    document.getElementById('report-payment-method').textContent = order.paymentMethod || 'N/A';
    document.getElementById('report-order-total').textContent = `â‚¹${order.total.toFixed(2)}`;

    const address = order.shippingAddress || {};
    document.getElementById('report-shipping-address').innerHTML = `
      <p>${address.fullName || 'Not specified'}</p>
      <p>${address.houseNameOrNo || ''} ${address.street || ''}</p>
      <p>${address.city || ''}, ${address.state || ''} ${address.postalCode || ''}</p>
      <p>${address.country || ''}</p>
      <p>Phone: ${address.phone || 'No phone provided'}</p>
      ${address.email ? `<p>Email: ${address.email}</p>` : ''}
    `;

    const productListEl = document.getElementById('report-product-list');
    productListEl.innerHTML = '';
    
    order.products.forEach(product => {
      const row = document.createElement('tr');
      row.innerHTML = `
        <td class="px-4 py-2">
          <div class="flex items-center">
            <div>
              <p class="font-medium text-gray-900">${product.name}</p>
              ${product.variant ? `<p class="text-xs text-gray-500">${product.variant}</p>` : ''}
            </div>
          </div>
        </td>
        <td class="px-4 py-2 text-gray-600">${product.quantity}</td>
        <td class="px-4 py-2 text-gray-600">â‚¹${product.price.toFixed(2)}</td>
        <td class="px-4 py-2 text-gray-900 font-medium">â‚¹${(product.price * product.quantity).toFixed(2)}</td>
      `;
      productListEl.appendChild(row);
    });

    document.getElementById('printReport').addEventListener('click', function() {
      window.print();
    });
  }

  document.getElementById('closeModal').addEventListener('click', () => {
    const modal = document.getElementById('orderModal');
    modal.classList.add('opacity-0');
    modal.classList.add('scale-95');
    setTimeout(() => {
      modal.classList.add('hidden');
    }, 300);
  });

  document.getElementById('closeReportModal').addEventListener('click', () => {
    const modal = document.getElementById('reportModal');
    modal.classList.add('opacity-0');
    modal.classList.add('scale-95');
    setTimeout(() => {
      modal.classList.add('hidden');
    }, 300);
  });

  document.getElementById('orderModal').addEventListener('click', (e) => {
    if (e.target === document.getElementById('orderModal')) {
      document.getElementById('closeModal').click();
    }
  });

  document.getElementById('reportModal').addEventListener('click', (e) => {
    if (e.target === document.getElementById('reportModal')) {
      document.getElementById('closeReportModal').click();
    }
  });
</script>