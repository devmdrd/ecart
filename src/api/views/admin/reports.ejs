<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js"></script>

<div class="container mx-auto px-6 py-10">
  <div class="mb-10">
    <h1 class="text-4xl font-bold text-gray-800">📊 Admin Reports</h1>
  </div>

  <div id="report-content" class="grid grid-cols-1 md:grid-cols-2 gap-8">
    <% const charts = [
      { id: "dailyRevenueChart", title: "📊 Daily Revenue", varName: "revenueChartData", type: "bar" },
      { id: "ordersPerDayChart", title: "📈 Orders per Day", varName: "ordersPerDay", type: "line" },
      { id: "orderStatusChart", title: "🍩 Order Status Distribution", varName: "orderStatusSummary", type: "doughnut" },
      { id: "popularProductsChart", title: "🥧 Top 5 Popular Products", varName: "popularProducts", type: "pie" },
      { id: "categorySalesChart", title: "📊 Sales by Category", varName: "categorySales", type: "bar" },
      { id: "newUsersChart", title: "📈 New Users Over Time", varName: "newUsersChartData", type: "line" },
      { id: "categoryOrderCountChart", title: "📊 Top 5 Categories by Order Count", varName: "categoryOrderCount", type: "bar" },
      { id: "productSalesChart", title: "🥧 Sales by Product", varName: "productSales", type: "pie" }
    ]; %>

    <% charts.forEach(chart => { %>
    <div class="bg-white p-6 rounded-xl shadow">
      <div class="flex justify-between items-center mb-2">
        <h2 class="text-lg font-semibold"><%= chart.title %></h2>
        <div class="space-x-2">
          <button onclick="downloadPDF('<%= chart.id %>')" class="text-sm px-2 py-1 bg-gray-100 text-black rounded hover:bg-gray-200">
            <i class="fas fa-file-pdf"></i>
          </button>
          <button onclick="downloadExcel('<%= chart.id %>', <%= chart.varName %>)" class="text-sm px-2 py-1 bg-gray-100 text-black rounded hover:bg-gray-200">
            <i class="fas fa-file-excel"></i>
          </button>
        </div>        
      </div>
      <canvas id="<%= chart.id %>"></canvas>
    </div>
    <% }); %>
  </div>
</div>

<script>
  const revenueChartData = <%- JSON.stringify(revenueChartData) %>;
  const ordersPerDay = <%- JSON.stringify(ordersPerDay) %>;
  const orderStatusSummary = <%- JSON.stringify(orderStatusSummary) %>;
  const popularProducts = <%- JSON.stringify(popularProducts) %>;
  const categorySales = <%- JSON.stringify(categorySales) %>;
  const newUsersChartData = <%- JSON.stringify(newUsersChartData) %>;
  const categoryOrderCount = <%- JSON.stringify(categoryOrderCount) %>;
  const productSales = <%- JSON.stringify(productSales) %>;

  function renderChart(id, type, data, options) {
    const ctx = document.getElementById(id).getContext('2d');
    new Chart(ctx, { type, data, options });
  }

  renderChart('dailyRevenueChart', 'bar', {
    labels: revenueChartData.map(item => item.date),
    datasets: [{
      label: 'Daily Revenue',
      data: revenueChartData.map(item => item.revenue),
      backgroundColor: 'rgba(75, 192, 192, 0.2)',
      borderColor: 'rgba(75, 192, 192, 1)',
      borderWidth: 1
    }]
  }, { responsive: true });

  renderChart('ordersPerDayChart', 'line', {
    labels: ordersPerDay.map(item => item.date),
    datasets: [{
      label: 'Orders',
      data: ordersPerDay.map(item => item.orders),
      borderColor: 'rgba(153, 102, 255, 1)',
      fill: false,
      tension: 0.3
    }]
  }, { responsive: true });

  renderChart('orderStatusChart', 'doughnut', {
    labels: Object.keys(orderStatusSummary),
    datasets: [{
      data: Object.values(orderStatusSummary),
      backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0']
    }]
  }, { responsive: true });

  renderChart('popularProductsChart', 'pie', {
    labels: popularProducts.map(p => p.name),
    datasets: [{
      data: popularProducts.map(p => p.count),
      backgroundColor: ['#FF5733', '#33FF57', '#5733FF', '#FF33A6', '#33FFF5']
    }]
  }, { responsive: true });

  renderChart('categorySalesChart', 'bar', {
    labels: categorySales.map(c => c.name),
    datasets: [{
      label: 'Sales',
      data: categorySales.map(c => c.total),
      backgroundColor: 'rgba(255, 159, 64, 0.2)',
      borderColor: 'rgba(255, 159, 64, 1)',
      borderWidth: 1
    }]
  }, { responsive: true });

  renderChart('newUsersChart', 'line', {
    labels: newUsersChartData.map(u => u.date),
    datasets: [{
      label: 'New Users',
      data: newUsersChartData.map(u => u.count),
      borderColor: 'rgba(75, 192, 192, 1)',
      fill: false,
      tension: 0.3
    }]
  }, { responsive: true });

  renderChart('categoryOrderCountChart', 'bar', {
    labels: categoryOrderCount.map(c => c.name),
    datasets: [{
      label: 'Orders',
      data: categoryOrderCount.map(c => c.count),
      backgroundColor: 'rgba(153, 102, 255, 0.2)',
      borderColor: 'rgba(153, 102, 255, 1)',
      borderWidth: 1
    }]
  }, { responsive: true });

  renderChart('productSalesChart', 'pie', {
    labels: productSales.map(p => p.name),
    datasets: [{
      data: productSales.map(p => p.total),
      backgroundColor: ['#FF5733', '#33FF57', '#5733FF', '#FF33A6', '#33FFF5']
    }]
  }, { responsive: true });

  async function downloadPDF(chartId) {
    const canvasWrapper = document.getElementById(chartId).parentElement;
    const canvasImage = await html2canvas(canvasWrapper);
    const imgData = canvasImage.toDataURL('image/png');

    const { jsPDF } = window.jspdf;
    const pdf = new jsPDF();
    pdf.addImage(imgData, 'PNG', 10, 10, 190, 0);
    pdf.save(`${chartId}.pdf`);
  }

  function downloadExcel(chartId, data) {
    let sheetData = [];

    if (Array.isArray(data)) {
      sheetData = data;
    } else if (typeof data === 'object') {
      sheetData = Object.entries(data).map(([key, value]) => ({ key, value }));
    }

    const worksheet = XLSX.utils.json_to_sheet(sheetData);
    const workbook = XLSX.utils.book_new();
    XLSX.utils.book_append_sheet(workbook, worksheet, chartId);
    XLSX.writeFile(workbook, `${chartId}.xlsx`);
  }
</script>
