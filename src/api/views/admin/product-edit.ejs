<style>
  .preview {
    overflow: hidden;
    width: 160px;
    height: 160px;
    margin: 10px;
    border: 1px solid red;
  }

  .modal-lg {
    max-width: 1000px !important;
  }

  .text {
    color: #333;
    font-size: 20px;
    position: absolute;
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
    -ms-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
    text-align: center;
  }
</style>

<div class="container" style="width: 60%">
  <h1>Product Edit</h1>

  <form
    class="row"
    action="/admin/edit-product/<%= productData._id %>"
    method="post"
    enctype="multipart/form-data"
    name="myForm"
  >
    <div class="mb-3 col-md-6">
      <label for="categorySelect" class="form-label">Category</label>
      <select class="form-select" id="category" name="category" required>
        <option value="<%- productData.category._id%>">
          <%- productData.category.name %>
        </option>
      </select>
    </div>
    <div class="mb-3 col-md-6">
      <label for="categorySelect" class="form-label">Brands</label>
      <select class="form-select" id="brand" name="brand" required>
        <option value="<%- productData.brand._id %>">
          <%- productData.brand.name %>
        </option>
      </select>
    </div>
    <div class="col-md-6">
      <label for="brandName" class="form-label">Product Name</label>
      <input
        type="text"
        class="form-control"
        id="brandName"
        name="name"
        placeholder="Enter Product name"
        value="<%- productData.name %>"
        required
      />
    </div>
    <div class="col-md-4">
      <label for="brandName" class="form-label">Stock</label>
      <input
        type="number"
        class="form-control"
        id="brandName"
        name="stock"
        placeholder="Max. Stock Count"
        value="<%- productData.stock %>"
        required
      />
    </div>
    <div class="col-md-3 mb-3 mt-3">
      <label for="brandName" class="form-label">MRP</label>
      <input
        type="number"
        class="form-control"
        id="mrp"
        name="mrp"
        placeholder="Max. Retail Price"
        value="<%- productData.mrp %>"
        oninput="calculateValues()"
        required
      />
    </div>
    <div class="col-md-3 mb-3 mt-3">
      <label for="brandName" class="form-label"> Original price</label>
      <input
        type="number"
        class="form-control"
        id="cp"
        name="originalPrice"
        placeholder="original Price"
        value="<%- productData.originalPrice %>"
        oninput="calculateValues()"
        required
      />
    </div>
    <div class="col-md-3 mb-3 mt-3">
      <label for="brandName" class="form-label">Total discount price</label>
      <input   
        type="text"
        class="form-control"
        id="total"
        value="<%- productData.discountPrice %>"
        name="discountPrice"
        readonly
       
      />
    </div>
    <div class="col-md-3 mb-3 mt-3">
      <label for="brandName" class="form-label"
        ><i class="bi bi-percent"></i>Product offer</label
      >
      <input
        type="text"
        class="form-control"
        id="percentage"
        name="offer"
        value="<%- productData.offer %>"
        readonly
   
      />
    </div>

    <div class="mb-3">
      <label for="brandDescription" class="form-label">Description</label>
      <textarea
        class="form-control"
        id="brandDescription"
        name="description"
        rows="4"
        placeholder="Enter Product description"
        required
      >
<%- productData.description %></textarea
      >
    </div>

    <input type="file" id="imageInput" name="files" required multiple />
    <div id="existingImages" style="display: flex; flex-wrap: wrap">
      <% productData.image.forEach((image, index) => { %>
      <div
        class="existing-image"
        style="
          display: flex;
          flex-direction: column;
          align-items: center;
          margin: 10px;
        "
      >
        <img src="/<%= image %>" style="width: 100px; height: 100px" alt="" />
        <button onclick="deleteImage('<%= index %>')">Delete</button>
      </div>
      <% }); %>
    </div>

    <div
      id="imageContainer"
      style="display: flex; flex-direction: row; flex-wrap: wrap"
    ></div>

    <div class="col-12 text-center">
      <a class="btn btn-secondary" onclick="history.back()">Cancel</a>
      <button type="reset" class="btn btn-danger">Reset</button>
      <button type="submit" class="btn btn-success">Submit</button>
    </div>
  </form>
</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const imageInput = document.getElementById("imageInput");
    const imageContainer = document.getElementById("imageContainer");

    imageInput.addEventListener("change", handleImageChange);

    function handleImageChange(event) {
      const files = event.target.files;

      for (const file of files) {
        const reader = new FileReader();
        reader.onload = (e) => {
          const originalImage = createImage(e.target.result);
          const imageDiv = createImageDiv(originalImage);
          imageContainer.appendChild(imageDiv);
          createImageActions(originalImage, imageDiv);
        };
        reader.readAsDataURL(file);
      }
    }

    function createImage(src) {
      const image = new Image();
      image.src = src;
      return image;
    }

    function createImageDiv(image) {
      const imageDiv = createDivWithStyles("image-div", {
        width: "200px",
        height: "200px",
        margin: "15px 10px",
      });
      imageDiv.appendChild(image);
      return imageDiv;
    }

    function createDivWithStyles(className, styles) {
      const div = document.createElement("div");
      div.classList.add(className);
      Object.assign(div.style, styles);
      return div;
    }

    function createImageActions(image, imageDiv) {
      image.style.width = "200px";
      image.style.height = "200px";
      image.style.objectFit = "contain";

      const cropper = new Cropper(image, {
        aspectRatio: NaN,
        viewMode: 1,
      });

      const cropButton = createActionButton("Crop", () => {
        const croppedCanvas = cropper.getCroppedCanvas();
        const croppedImage = createCroppedImage(croppedCanvas);
        const deleteButton = createActionButton("Delete", () => {
          imageDiv.remove();
        });

        const croppedImageDiv = createImageDiv(croppedImage);
        croppedImageDiv.appendChild(deleteButton);
        imageContainer.appendChild(croppedImageDiv);
        imageDiv.remove();
      });

      imageDiv.appendChild(cropButton);
    }

    function createActionButton(text, onClick) {
      const button = document.createElement("button");
      button.textContent = text;
      button.style.display = "block";
      button.addEventListener("click", onClick);
      return button;
    }

    function createCroppedImage(croppedCanvas) {
      const croppedImage = createImage(croppedCanvas.toDataURL());
      croppedImage.style.maxWidth = "100px";
      croppedImage.style.maxHeight = "100px";
      return croppedImage;
    }
  });

  function calculateValues() {
    // Get the values from input1 and input2
    const value1 = parseFloat(document.getElementById("mrp").value);
    const value2 = parseFloat(document.getElementById("cp").value);

    // Calculate the difference
    const difference = value1 - value2;
    console.log(difference)

    // Calculate the percentage
    const percentage = Math.round((difference / value1) * 100);
    console.log(percentage)

    // Display the results in the respective input boxes
    document.getElementById("total").value = isNaN(difference)
      ? ""
      : difference;
    document.getElementById("percentage").value = isNaN(percentage)
      ? ""
      : percentage;
  }
  function deleteImage(index) {
    // Find the parent container of the image and remove it
    const imageContainer = document.querySelectorAll(".existing-image")[index];
    if (imageContainer) {
      imageContainer.remove();

      // You can also send an AJAX request to the server to delete the image from the server.
      // Here, we are just removing it from the DOM.
    }
  }
</script>
