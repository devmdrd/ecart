<div class="container mx-auto p-4">
  <!-- Stats Section -->
  <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-6">
    <!-- Total Sales Card -->
    <div class="bg-blue-600 text-white p-4 rounded-lg shadow-lg text-center">
      <i class="bi bi-cart-check text-4xl"></i>
      <h6 class="text-sm mt-2">Total Sales</h6>
      <h3 class="text-2xl font-semibold">$12,340</h3>
    </div>

    <!-- Total Orders Card -->
    <div class="bg-green-600 text-white p-4 rounded-lg shadow-lg text-center">
      <i class="bi bi-boxes text-4xl"></i>
      <h6 class="text-sm mt-2">Total Orders</h6>
      <h3 class="text-2xl font-semibold">1,245</h3>
    </div>

    <!-- Average Revenue Card -->
    <div class="bg-yellow-400 text-gray-800 p-4 rounded-lg shadow-lg text-center">
      <i class="bi bi-cash text-4xl"></i>
      <h6 class="text-sm mt-2">Average Revenue</h6>
      <h3 class="text-2xl font-semibold">$49.20</h3>
    </div>

    <!-- Returning Customers Card -->
    <div class="bg-teal-500 text-white p-4 rounded-lg shadow-lg text-center">
      <i class="bi bi-person-check text-4xl"></i>
      <h6 class="text-sm mt-2">Returning Customers</h6>
      <h3 class="text-2xl font-semibold">321</h3>
    </div>
  </div>

  <!-- Sales & Revenue Report Section -->
  <div class="bg-white p-6 rounded-lg shadow-md">
    <div class="flex justify-between items-center mb-4">
      <h6 class="text-lg font-semibold">Sales & Revenue Report</h6>
      <select id="chartTypeSelect" class="form-select border border-gray-300 rounded-md py-2 px-4 text-sm">
        <option value="daily">Daily</option>
        <option value="weekly">Weekly</option>
        <option value="monthly">Monthly</option>
        <option value="yearly">Yearly</option>
      </select>
    </div>
    <canvas id="mainChart" height="300"></canvas>
  </div>
</div>

<script>
  async function fetchData(type) {
    const res = await fetch(`/admin/sales-revenue-report?aggregation=${type}`);
    return await res.json();
  }

  function renderChart(canvasId, data) {
    const ctx = document.getElementById(canvasId).getContext("2d");
    const labels = data.map(item => item._id?.toString() || `Week ${item._id}`);
    const values = data.map(item => item.totalRevenue || 0);

    new Chart(ctx, {
      type: "line",
      data: {
        labels,
        datasets: [{
          label: "Total Revenue",
          data: values,
          backgroundColor: "rgba(75, 192, 192, 0.2)",
          borderColor: "rgba(75, 192, 192, 1)",
          borderWidth: 2,
          fill: true
        }]
      },
      options: {
        responsive: true,
        scales: {
          y: { beginAtZero: true }
        }
      }
    });
  }

  document.addEventListener("DOMContentLoaded", async () => {
    const defaultType = "daily";
    const data = await fetchData(defaultType);
    renderChart("mainChart", data);
  });

  document.getElementById("chartTypeSelect").addEventListener("change", async (e) => {
    const type = e.target.value;
    const data = await fetchData(type);
    renderChart("mainChart", data);
  });
</script>
