<div class="mt-4 w-1/3 mx-auto border border-gray-300 p-6 rounded-lg shadow-lg">
  <h4 class="font-bold text-2xl mb-4 text-center"><%= brand ? 'Edit Brand' : 'Add Brand' %></h4>

  <form id="brandForm" enctype="multipart/form-data">
    <% if (brand) { %>
      <input type="hidden" name="brandId" value="<%= brand._id %>">
    <% } %>

    <!-- Name -->
    <div class="mb-4">
      <label for="brandName" class="block text-lg font-semibold text-gray-700">Brand Name</label>
      <input type="text"
             id="brandName"
             name="name"
             value="<%= brand?.name || '' %>"
             class="mt-2 w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500"
             required>
    </div>

    <!-- Description -->
    <div class="mb-4">
      <label for="brandDescription" class="block text-lg font-semibold text-gray-700">Description</label>
      <textarea id="brandDescription"
                name="description"
                rows="3"
                class="mt-2 w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500"><%= brand?.description || '' %></textarea>
    </div>

    <!-- Category Selection -->
    <div class="mb-4">
      <label for="categorySelect" class="block text-lg font-semibold text-gray-700">Select Category</label>
      <select id="categorySelect" name="category" class="mt-2 w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500" required>
        <option value="">-- Select Category --</option>
        <% categories.forEach(category => { %>
          <option value="<%= category._id %>" <%= brand && brand.category && brand.category._id.toString() === category._id.toString() ? 'selected' : '' %> >
            <%= category.name %>
          </option>
        <% }) %>
      </select>      
    </div>

    <!-- Image Upload -->
    <div class="mb-4">
      <label for="brandImage" class="block text-lg font-semibold text-gray-700 mb-2">Upload Image</label>
      <input type="file"
             id="brandImage"
             name="image"
             accept="image/*"
             class="w-full border border-gray-300 rounded-lg p-2 focus:outline-none focus:ring-2 focus:ring-indigo-500">

      <!-- Unified Image Display -->
      <div class="mt-4">
        <img id="imageDisplay"
             src="<%= brand?.logo ? '/' + brand.logo : '#' %>"
             alt="Brand Image"
             class="w-28 h-28 object-cover rounded-md border <%= brand?.logo ? '' : 'hidden' %>" />
      </div>
    </div>

    <button type="submit"
            class="w-full py-3 bg-gray-800 text-white rounded-lg hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-indigo-500">
      Save
    </button>
  </form>
</div>

<!-- Toast Notification -->
<div id="toast" class="fixed bottom-6 right-6 bg-gray-800 text-white py-3 px-6 rounded-lg shadow-lg opacity-0 transition-opacity duration-500 pointer-events-none"></div>

<script>
  const imageInput = document.getElementById("brandImage");
  const imageDisplay = document.getElementById("imageDisplay");

  imageInput.addEventListener("change", () => {
    const file = imageInput.files[0];
    if (file) {
      const reader = new FileReader();
      reader.onload = (e) => {
        imageDisplay.src = e.target.result;
        imageDisplay.classList.remove("hidden");
      };
      reader.readAsDataURL(file);
    }
  });

  const toast = document.getElementById("toast");

  function showToast(message, isSuccess = true) {
    toast.textContent = message;
    toast.classList.remove("opacity-0");
    toast.classList.add("opacity-100");
    toast.classList.add(isSuccess ? "bg-green-600" : "bg-red-600");

    setTimeout(() => {
      toast.classList.remove("opacity-100");
      toast.classList.add("opacity-0");
    }, 2500);
  }

  document.getElementById("brandForm").addEventListener("submit", async function (e) {
    e.preventDefault();

    const form = e.target;
    const formData = new FormData(form);
    const isEdit = formData.get("brandId");

    const endpoint = "/admin/brands";
    const method = isEdit ? "PUT" : "POST";

    try {
      const response = await fetch(endpoint, {
        method,
        body: formData
      });

      const result = await response.json();

      if (result.success) {
        showToast(result.message, true);
        setTimeout(() => {
          window.location.href = "/admin/brands";
        }, 2000);
      } else {
        showToast(result.message, false);
      }
    } catch (err) {
      console.error("Error submitting form:", err);
      showToast("Something went wrong!", false);
    }
  });
</script>
